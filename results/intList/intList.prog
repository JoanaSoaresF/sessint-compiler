stype IntList rec x. +{null: @, cons: int ^ (x) * @};
null : unit -> {IntList}
fun n -> 
	c <- {
		c.null;
		close c
	}
end;
cons : int -> {IntList <- l:IntList}
fun v -> 
	c <- {
		c.cons;
		send c v;
		print v;
		l_ <- spawn { fwd l l_ } l;
		sendc c l_;
		close c
	}
end;
dealloc : unit -> {@ <- l:IntList}
fun v ->
c <- {
	case l of 
	null:(
		wait l; 
		close c
	)
	cons:(
		n:int <- recv l; 
		l_:IntList <- recvc l; 
		wait l; 
		d <- spawn (dealloc ()) l_;
		fwd d c
	)
 }
end;
;; c <- {
	e0 <- spawn (null ()); 
	e1 <- spawn (cons 1) e0;
	e2 <- spawn (cons 2) e1;
	e3 <- spawn (cons 3) e2;
	e4  <- spawn (dealloc ()) e3;
	wait e4;
	close c		
};;