stype IntCStream rec x.&{next: int^x, stop: @};
nats : int -> {IntCStream}
fun n -> c <- {
    case c of
        next:(
			send c n;
			print n;
			d <- spawn (nats (n+1));
			fwd d c
        ) stop:(
			close c
        )
} end;
;; c <- {
		d <- spawn (nats 0);
	d.next;
	a0:int <- recv d;
	print a0;
	d.next;
	a1:int <- recv d;
	print a1;
	d.next;
	a2:int <- recv d;
	print a2;
	d.stop;
	wait d;
	close c

};;